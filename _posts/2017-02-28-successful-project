---
layout: post
title: "Successful project"
date: 2017-02-28
categories: Productivity
---
What does it mean that project is successful?
Let's say that we delivered on time, on budget and per specifications.
Our code was perfect. Readable, testable, self-documenting.
Our solution was so intuitive that it could almost use itself.

And yet... Not a single user actually used it. 
Why? Because client said what they thought they needed, not what they really needed.
And they got what they asked for, not what they wanted.

It looks like if the client programmed us, their team. 
And we, being obedient, little robots, did what we were told...
...Wait, what?

Someone once said that the biggest problem in IT is the poor quality of the client.

I can't really agree.
Think about it.
People are - usually - rational agents.
They don't hire your team to waste money. 
They hire you to bring value.

There is however a big "but" to this:

Client does not always know what is really needed.
The problem domain is usually complex. 
Possible solutions are numerous, and each comes with its own set of trade-offs, pros and cons.

It's like buying a new pair of shoes. Unless you're one of the extremely lucky beings, it will usually take at least several attempts to find a pair that meets all requirements: fits well, looks good and cost is acceptable. You might need to decide for some trade-offs: cheaper, but will last shorter, awesome-looking, but you will suffer... You get the drift.

Your client is buying your time and skill to get something that will solve their problem.
And your project can be considered to be successfull only if that problem is solved.
If you can solve your client's problems, they will keep coming back for more good solutions.
If you can't, even if you deliver on time, on budget and per specifications, you still fail.
